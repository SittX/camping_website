<?php
require_once("DataRepository.php");
class RssDataRepository implements DataRepository
{
    private mysqli $connection;
    public function __construct($connection){
       $this->connection = $connection;
    }

    public function searchById($id): ?Rss
    {
        $query = "SELECT * FROM RssFeed WHERE rss_id = ?";
        $paramTypes = "i";
        $stmt = prepareAndExecuteQuery($this->connection, $query, $paramTypes, $id);

        $mysqli_result = $stmt->get_result();
        if ($mysqli_result->num_rows <= 0) {
            throw new mysqli_sql_exception("RSS with the given id is not found");
        }

        $result = $mysqli_result->fetch_assoc();
        $stmt->close();
        return $this->mapRowToRssObject($result);
    }

    public function getLists(): ?array
    {
        $query = "SELECT * FROM RssFeed ORDER BY rss_id DESC";
        $stmt = $this->connection->prepare($query);

        if (!$stmt->execute()) {
            throw new mysqli_sql_exception("Error executing the given sql statement.");
        }

        $mysqli_result = $stmt->get_result();
        $rssLists = [];
        while ($row = $mysqli_result->fetch_assoc()) {
            $rss = $this->mapRowToRssObject($row);
            $rssLists[] = $rss;
        }
        $stmt->close();
        return $rssLists;
    }

    public function update($existingData, $newData): int|string
    {
        $query = "UPDATE RssFeed SET title = ?, link = ?, description = ?, publish_date = ? WHERE rss_id = ?";
        $title = $newData->getTitle();
        $link = $newData->getLink();
        $description = $newData->getDescription();
        $publishDate = $newData->getPublishDate();
        $existingRssId = $existingData->getId();

        $paramsType = 'ssssi';
        $stmt = prepareAndExecuteQuery($this->connection, $query, $paramsType, $title, $link, $description, $publishDate, $existingRssId);

        $affectedRow = $stmt->affected_rows;
        $stmt->close();
        return $affectedRow;
    }

    public function insert($data): int|string
    {
        $query = "INSERT INTO RssFeed(title, link, description, publish_date) VALUES (?, ?, ?, ?)";
        $paramTypes = "ssss";
        $stmt = prepareAndExecuteQuery($this->connection, $query, $paramTypes, $data->getTitle(), $data->getLink(), $data->getDescription(), $data->getPublishDate());

        $affectedRow = $stmt->affected_rows;
        $autoGeneratedID = $this->connection->insert_id;
        $stmt->close();
        return $autoGeneratedID;
    }

    public function remove($id): int|string
    {
        $query = "DELETE FROM RssFeed WHERE rss_id = ?";
        $paramTypes = "i";
        $stmt = prepareAndExecuteQuery($this->connection, $query, $paramTypes, $id);
        $affectedRow = $stmt->affected_rows;
        $stmt->close();
        return $affectedRow;
    }

    // Helper functions
    private function mapRowToRssObject($row):Rss
    {
        $publishDate = new DateTime($row["publish_date"]);
        $rss = new Rss($row["title"],$row["link"],$row["description"],$publishDate);
        $rss->setId($row["rss_id"]);
        return $rss;
    }

}