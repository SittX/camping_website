<?php

class BookingDataRepository implements DataRepository
{
    private mysqli $connection;
    private UserDataRepository $userRepo;
    private CampSiteDataRepository $siteRepo;

    public function __construct(mysqli $connection)
    {
        $this->connection = $connection;
        $this->userRepo = new UserDataRepository($connection);
        $this->siteRepo = new CampSiteDataRepository($connection);
    }

    public function searchById($id)
    {
        $query = "SELECT * FROM Booking WHERE booking_id = ?";
        $paramTypes = "i";
        $stmt = prepareAndExecuteQuery($this->connection, $query, $paramTypes, $id);

        $mysqli_result = $stmt->get_result();
        if ($mysqli_result->num_rows <= 0) {
            throw new mysqli_sql_exception("Booking with the given id is not found");
        }

        $result = $mysqli_result->fetch_assoc();
        $stmt->close();
        return $this->mapRowToBookingObject($result);
    }

    public function getLists(): ?array
    {
        $query = "SELECT * FROM Booking";
        $stmt = $this->connection->prepare($query);

        if (!$stmt->execute()) {
            throw new mysqli_sql_exception("Error executing the given sql statement.");
        }

        $mysqli_result = $stmt->get_result();
        $bookingList = [];
        while ($row = $mysqli_result->fetch_assoc()) {
            $booking = $this->mapRowToBookingObject($row);
            $bookingList[] = $booking;
        }
        $stmt->close();
        return $bookingList;
    }

    public function update($existingData, $newData): int|string
    {
        $query = "UPDATE Booking SET check_in = ?, check_out = ?, user_id = ?, site_id=? WHERE booking_id = ?;";
        $paramTypes = "ssiii";
        $stmt = prepareAndExecuteQuery($this->connection, $query, $paramTypes, $newData->getCheckIn(), $newData->getCheckOut(), $newData->getUserId(), $newData->getSiteId(), $existingData->getBookingId());

        $affectedRow = $stmt->affected_rows;
        $stmt->close();
        return $affectedRow;
    }

    public function insert($data): int|string
    {
        $query = "INSERT INTO Booking(check_in,check_out,user_id,site_id) VALUES(?,?,?,?);";
        $paramTypes = "ssii";
        $stmt = prepareAndExecuteQuery($this->connection, $query, $paramTypes, $data->getCheckIn(), $data->getCheckOut(), $data->getUser()->getUserId(), $data->getSite()->getSiteId());

        $affectedRow = $stmt->affected_rows;
        $autoGeneratedID = $this->connection->insert_id;
        $stmt->close();
        return $autoGeneratedID;
    }

    public function remove($id): int|string
    {
        $query = "DELETE FROM Booking WHERE booking_id = ?;";
        $paramTypes = "i";
        $stmt = prepareAndExecuteQuery($this->connection, $query, $paramTypes, $id);

        $affectedRow = $stmt->affected_rows;
        $stmt->close();
        return $affectedRow;
    }

    // Helper functions
    private function mapRowToBookingObject($row): Booking
    {
        $user = $this->userRepo->searchById($row["user_id"]);
        $site = $this->siteRepo->searchById($row["site_id"]);
        $newBooking = new Booking($row["check_in"], $row["check_out"], $user, $site);
        $newBooking->setBookingId($row["booking_id"]);
        return $newBooking;
    }
}